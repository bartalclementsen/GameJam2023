<div>
    <h3>Costs</h3>

    @foreach (DataItem livingCostObject in LivingCosts)
    {
        <div style="margin-bottom: 16px;">
            <span>@livingCostObject.Name:</span>
            <span>$@livingCostObject.Amount</span>
        </div>
    }
</div>

@code {
    private List<DataItem> LivingCosts = new();

    protected override void OnInitialized()
    {
        LivingCosts = new();
    }

    internal void HandleNewGameEvent(GameEvent gameEvent)
    {
        if (gameEvent.ChangedLivingCosts != null)
        {
            foreach (LivingCost livingCost in gameEvent.ChangedLivingCosts)
            {
                DataItem? dataItem = LivingCosts.FirstOrDefault(lc => lc.Name == livingCost.Name);

                if (dataItem != null)
                {
                    dataItem.Amount = Math.Round(livingCost.Amount, 2);
                }
            }
        }

        if (gameEvent.RemoveLivingCosts != null)
        {
            foreach (LivingCost livingCost in gameEvent.RemoveLivingCosts)
            {
                LivingCosts.Remove(new DataItem(livingCost));
            }
        }

        if(gameEvent.NewLivingCosts != null)
        {
            foreach (LivingCost livingCost in gameEvent.NewLivingCosts)
            {
                LivingCosts.Add(new DataItem(livingCost));
            }
        }

        if (gameEvent.NewLivingCosts != null || gameEvent.RemoveLivingCosts != null)
        {
            StateHasChanged();
        }
    }

    private class DataItem
    {
        public string Name { get; set; } = string.Empty;
        public decimal Amount { get; set; } = 0;
        public LivingCostType LivingCostType { get; set; } = LivingCostType.Daily;

        public DataItem(LivingCost livingCost)
        {
            Name = livingCost.Name;
            Amount = Math.Round(livingCost.Amount, 2);
            LivingCostType = livingCost.LivingCostType;
        }
    }
}
