@inject IJSRuntime JSRuntime;

@foreach (Event eventObject in Events)
{
    <div class="event">
        <h5>@eventObject.Title</h5>
        <span>@eventObject.Details</span>
    </div>
}

<audio src="/audio/notification.mp3" id="notificationAudio" ></audio>

@code {
    private List<Event> Events = new List<Event>();

    protected override void OnInitialized()
    {
        Events = new List<Event>();
    }

    internal async void HandleNewGameEvent(GameEvent gameEvent)
    {
        if (gameEvent.NewEvents != null)
        {
            foreach (Event eventObject in gameEvent.NewEvents)
            {
                Events.Insert(0, eventObject);
                if (Events.Count() > 4)
                {
                    Events.RemoveAt(4);
                }
            }
            StateHasChanged();
            await JSRuntime.InvokeVoidAsync("audioFunctions.playAudio", "notificationAudio");
        }
    }
}
